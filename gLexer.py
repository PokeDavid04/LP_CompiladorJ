# Generated from g.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,30,143,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,1,0,1,0,1,1,1,1,1,1,1,2,1,
        2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,
        10,1,11,1,11,1,11,1,12,1,12,1,13,1,13,1,14,1,14,1,14,1,15,1,15,1,
        15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,19,1,20,1,20,1,20,1,21,1,
        21,1,22,1,22,1,23,1,23,1,24,1,24,1,24,1,25,1,25,1,25,1,25,1,26,1,
        26,5,26,124,8,26,10,26,12,26,127,9,26,1,27,4,27,130,8,27,11,27,12,
        27,131,1,28,1,28,1,28,1,29,4,29,138,8,29,11,29,12,29,139,1,29,1,
        29,0,0,30,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,
        12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,
        23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,1,0,4,2,0,65,90,97,
        122,3,0,48,57,65,90,97,122,1,0,48,57,3,0,9,9,13,13,32,32,145,0,1,
        1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
        0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,
        0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,
        0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,
        0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,
        0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,1,61,1,0,
        0,0,3,63,1,0,0,0,5,66,1,0,0,0,7,68,1,0,0,0,9,70,1,0,0,0,11,72,1,
        0,0,0,13,74,1,0,0,0,15,76,1,0,0,0,17,78,1,0,0,0,19,80,1,0,0,0,21,
        82,1,0,0,0,23,84,1,0,0,0,25,87,1,0,0,0,27,89,1,0,0,0,29,91,1,0,0,
        0,31,94,1,0,0,0,33,97,1,0,0,0,35,99,1,0,0,0,37,101,1,0,0,0,39,103,
        1,0,0,0,41,105,1,0,0,0,43,108,1,0,0,0,45,110,1,0,0,0,47,112,1,0,
        0,0,49,114,1,0,0,0,51,117,1,0,0,0,53,121,1,0,0,0,55,129,1,0,0,0,
        57,133,1,0,0,0,59,137,1,0,0,0,61,62,5,10,0,0,62,2,1,0,0,0,63,64,
        5,61,0,0,64,65,5,58,0,0,65,4,1,0,0,0,66,67,5,40,0,0,67,6,1,0,0,0,
        68,69,5,41,0,0,69,8,1,0,0,0,70,71,5,43,0,0,71,10,1,0,0,0,72,73,5,
        45,0,0,73,12,1,0,0,0,74,75,5,42,0,0,75,14,1,0,0,0,76,77,5,37,0,0,
        77,16,1,0,0,0,78,79,5,94,0,0,79,18,1,0,0,0,80,81,5,124,0,0,81,20,
        1,0,0,0,82,83,5,61,0,0,83,22,1,0,0,0,84,85,5,60,0,0,85,86,5,62,0,
        0,86,24,1,0,0,0,87,88,5,60,0,0,88,26,1,0,0,0,89,90,5,62,0,0,90,28,
        1,0,0,0,91,92,5,60,0,0,92,93,5,61,0,0,93,30,1,0,0,0,94,95,5,62,0,
        0,95,96,5,61,0,0,96,32,1,0,0,0,97,98,5,44,0,0,98,34,1,0,0,0,99,100,
        5,35,0,0,100,36,1,0,0,0,101,102,5,123,0,0,102,38,1,0,0,0,103,104,
        5,93,0,0,104,40,1,0,0,0,105,106,5,105,0,0,106,107,5,46,0,0,107,42,
        1,0,0,0,108,109,5,126,0,0,109,44,1,0,0,0,110,111,5,58,0,0,111,46,
        1,0,0,0,112,113,5,47,0,0,113,48,1,0,0,0,114,115,5,64,0,0,115,116,
        5,58,0,0,116,50,1,0,0,0,117,118,5,78,0,0,118,119,5,66,0,0,119,120,
        5,46,0,0,120,52,1,0,0,0,121,125,7,0,0,0,122,124,7,1,0,0,123,122,
        1,0,0,0,124,127,1,0,0,0,125,123,1,0,0,0,125,126,1,0,0,0,126,54,1,
        0,0,0,127,125,1,0,0,0,128,130,7,2,0,0,129,128,1,0,0,0,130,131,1,
        0,0,0,131,129,1,0,0,0,131,132,1,0,0,0,132,56,1,0,0,0,133,134,5,95,
        0,0,134,135,3,55,27,0,135,58,1,0,0,0,136,138,7,3,0,0,137,136,1,0,
        0,0,138,139,1,0,0,0,139,137,1,0,0,0,139,140,1,0,0,0,140,141,1,0,
        0,0,141,142,6,29,0,0,142,60,1,0,0,0,4,0,125,131,139,1,6,0,0
    ]

class gLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    ID = 27
    NUM = 28
    NUM_NEG = 29
    WS = 30

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'\\n'", "'=:'", "'('", "')'", "'+'", "'-'", "'*'", "'%'", "'^'", 
            "'|'", "'='", "'<>'", "'<'", "'>'", "'<='", "'>='", "','", "'#'", 
            "'{'", "']'", "'i.'", "'~'", "':'", "'/'", "'@:'", "'NB.'" ]

    symbolicNames = [ "<INVALID>",
            "ID", "NUM", "NUM_NEG", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "ID", "NUM", "NUM_NEG", "WS" ]

    grammarFileName = "g.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


